piq = Math.PI/4;pi = Math.PI;_root.mtime = 0;function generate(objet) {	time = 0;	for (num=eval("_root."+objet).fille+1; num<eval("_root."+objet).maxi; num++) {		duplicateMovieClip(eval("_root."+objet), objet+num, num);		eval("_root."+objet+num)._x = random(430)+60;		eval("_root."+objet+num)._y = random(280)+60;		eval("_root."+objet).fille = num;	}}function initar(arbre) {	arbre.pommes = _root.arbrepommes;	arbre._x = random(430)+60;	arbre._y = random(200)+100;}function arbre(arbre) {	arbre.pomme = Math.floor(arbre.pommes);	arbre.gotoAndStop(arbre.pomme);}function initanimal(animal) {	fscommand("showmenu", false);	fscommand("fullscreen", true);	time = 0;	tellTarget (animal) {		etat = "";		chante = 0;		construc = false;		curframe = "repos";		frame = "";		speed = 5;		faim = 5;		pommes = 0;		effort = 0;		ang = 0;		angle = 0;	}}function graphique(animal) {	if (animal.frame != animal.curframe) {		animal.frame = animal.curframe;		animal.gotoAndPlay(animal.frame);	}}function construire(animal, objet) {	animal.effort = 2;	objet.mur++;	animal.curframe = "travail";	if (objet.mur == 20) {		objet.gotoAndStop("construction");	} else if (objet.mur == 40) {		objet.gotoAndStop("fait");		animal.etat = "repos";		animal.construc = false;	}}function balader(animal) {	with (animal) {		effort = 0.5;		angle += (Math.random()-0.5)/2;		if ((_x<0) or (_x>550) or (_y<50) or (_y>400)) {			angle += 180;		}		ang = angle-2*pi*Math.floor(angle/(2*pi));		cosi = Math.cos(ang)*speed*0.5;		sinu = Math.sin(ang)*speed*0.5;		_x += cosi;		_y += sinu;		vitesse = Math.sqrt(cosi*cosi+sinu*sinu);		if (((ang>7*piq) or (ang<piq)) and (curframe != "coted")) {			curframe = "coted";			_xscale = 50;		} else if (((ang>piq) and (ang<3*piq)) and (curframe != "face")) {			curframe = "face";		} else if (((ang>3*piq) and (ang<5*piq)) and (curframe != "coteg")) {			curframe = "coteg";			_xscale = -50;		} else if (((ang>5*piq) and (ang<7*piq)) and (curframe != "dos")) {			curframe = "dos";		}	}}function manger(animal) {	animal.effort = 0;	animal.curframe = "mange";	animal.etat = "repos";	animal.faim += 5;	animal.pommes = 0;}function prendre(animal, chose) {	animal.effort = 0;	if (chose == _root.fourmhome) {		if (((_root.fourmi.etat == "collecte") and (_root.fourmi.pommes == 1)) or (_root.fourmi.etat == "repos")) {			_root.fourmi.etat = "construire";			_root.message = "La cigale s'est faite apercevoir en train de voler une pomme !";		}	}	if (chose.pommes>1) {		chose.pommes--;		animal.pommes = 1;	}}function aller(animal, dest) {	with (animal) {		if (pommes == 1) {			effort = 1.5;		} else {			effort = 1;		}		adj = dest._x-_x;		opp = dest._y-_y;		dist = Math.sqrt(opp*opp+adj*adj);		if (dist>speed/2) {			cosi = (adj/dist)*(speed/effort);			sinu = (opp/dist)*(speed/effort);			_x += cosi;			_y += sinu;			vitesse = Math.sqrt(cosi*cosi+sinu*sinu);			ang = -Math.acos(adj/dist)*Math.abs(1/opp)*opp+pi;			angle = (ang/pi)*180;			if (((ang>7*piq) or (ang<piq)) and (curframe != "coteg")) {				curframe = "coteg";				_xscale = -50;			} else if (((ang>piq) and (ang<3*piq)) and (curframe != "face")) {				curframe = "face";			} else if (((ang>3*piq) and (ang<5*piq)) and (curframe != "coted")) {				curframe = "coted";				_xscale = 50;			} else if (((ang>5*piq) and (ang<7*piq)) and (curframe != "dos")) {				curframe = "dos";			}		} else {			etat = "arrivŽ";		}	}}function plusproche(animal, chose) {	dister = 800;	dester = "rien";	for (num=1; num<7; num++) {		if ((num == 6) and (animal._name == "cigale") and (_root.mur.mur != 40)) {			objet = _root.fourmhome;		} else {			objet = eval(chose+num);		}		adj = objet._x-animal._x;		opp = objet._y-animal._y;		dist = Math.sqrt(opp*opp+adj*adj);		dest = objet;		if (objet.pommes>1) {			if (dist<dister) {				dister = dist;				dester = dest;			}		}	}	if (dester == "rien") {		animal.etat = "repos";		return dester;	} else {		return dester;	}}